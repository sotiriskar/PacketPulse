services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - packetpulse_network

  kafka:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - packetpulse_network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      packetpulse_network:
        aliases:
          - neptune.minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio-data:/data

  iceberg-rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      - packetpulse_network
    ports:
      - "8181:8181"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=eu-west-1
      - CATALOG_WAREHOUSE=s3://neptune/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    depends_on:
      - minio

  trino:
    image: trinodb/trino:476
    container_name: trino
    depends_on:
      - iceberg-rest
    networks:
      - packetpulse_network
    ports:
      - 8080:8080
    volumes:
      - ./etc/trino/config.properties:/etc/trino/config.properties
      - ./etc/trino/node.properties:/etc/trino/node.properties
      - ./etc/trino/jvm.config:/etc/trino/jvm.config
      - ./etc/trino/catalog/iceberg.properties:/etc/trino/catalog/iceberg.properties

  sqlpad:
    image: sqlpad/sqlpad:latest
    container_name: sqlpad
    ports:
      - "3000:3000"
    environment:
      - SQLPAD_ADMIN=admin@example.com
      - SQLPAD_ADMIN_PASSWORD=password
      - SQLPAD_CONNECTIONS__0__name=Trino
      - SQLPAD_CONNECTIONS__0__driver=trino
      - SQLPAD_CONNECTIONS__0__host=trino
      - SQLPAD_CONNECTIONS__0__port=8080
      - SQLPAD_CONNECTIONS__0__username=trino
      - SQLPAD_CONNECTIONS__0__catalog=iceberg
      - SQLPAD_CONNECTIONS__0__schema=default
    depends_on:
      - trino
    networks:
      - packetpulse_network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
    networks:
      - packetpulse_network
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf http://localhost:8123/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  venus:
    build:
      context: ..
      dockerfile: Venus/Dockerfile
    container_name: venus
    depends_on:
      - kafka
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=sessions
      - KAFKA_CONSUMER_GROUP=venus
      - MAX_CONNECTIONS=1000
      - API_KEY=mars-secret-key
    networks:
      - packetpulse_network

  mars:
    build:
      context: ..
      dockerfile: Mars/Dockerfile
    container_name: mars
    depends_on:
      - venus
    environment:
      - WEBSOCKET_URL=ws://venus:8000/ws
      - API_KEY=mars-secret-key
      - TOTAL_SESSIONS=10
    restart: "no"
    networks:
      - packetpulse_network

  neptune:
    build:
      context: ..
      dockerfile: Neptune/Dockerfile
    container_name: neptune
    depends_on:
      - kafka
      - iceberg-rest
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=sessions
      - KAFKA_CONSUMER_GROUP=neptune
      - ICEBERG_REST_URL=http://iceberg-rest:8181
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
    networks:
      - packetpulse_network

  jupiter:
    build:
      context: ..
      dockerfile: Jupiter/Dockerfile
    container_name: jupiter
    depends_on:
      - kafka
      - clickhouse
    ports:
      - "8081:8081"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CLICKHOUSE_HOST: clickhouse
      FLINK_PARALLELISM: 4
    networks:
      - packetpulse_network

networks:
  packetpulse_network:
    driver: bridge

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  minio-data:
